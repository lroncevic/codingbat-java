Given an array of ints of odd length, return a new array length 3 containing the elements from the middle of the array. The array length will be at least 3.


midThree([1, 2, 3, 4, 5]) → [2, 3, 4]
midThree([8, 6, 7, 5, 3, 0, 9]) → [7, 5, 3]
midThree([1, 2, 3]) → [1, 2, 3]

public int[] midThree(int[] nums) {
  int newArr[] = new int[3];
  
  if(nums.length == 3){
    newArr[0] = nums[0];
    newArr[1] = nums[1];
    newArr[2] = nums[2];
  } else {
    newArr[0] = nums[nums.length/2 - 1];
    newArr[1] = nums[nums.length/2];
    newArr[2] = nums[nums.length/2 + 1];
  }
  return newArr;
}